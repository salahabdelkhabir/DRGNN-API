{"ast":null,"code":"module.exports = robustPointInPolygon;\n\nvar orient = require('robust-orientation');\n\nfunction robustPointInPolygon(vs, point) {\n  var x = point[0];\n  var y = point[1];\n  var n = vs.length;\n  var inside = 1;\n  var lim = n;\n\n  for (var i = 0, j = n - 1; i < lim; j = i++) {\n    var a = vs[i];\n    var b = vs[j];\n    var yi = a[1];\n    var yj = b[1];\n\n    if (yj < yi) {\n      if (yj < y && y < yi) {\n        var s = orient(a, b, point);\n\n        if (s === 0) {\n          return 0;\n        } else {\n          inside ^= 0 < s | 0;\n        }\n      } else if (y === yi) {\n        var c = vs[(i + 1) % n];\n        var yk = c[1];\n\n        if (yi < yk) {\n          var s = orient(a, b, point);\n\n          if (s === 0) {\n            return 0;\n          } else {\n            inside ^= 0 < s | 0;\n          }\n        }\n      }\n    } else if (yi < yj) {\n      if (yi < y && y < yj) {\n        var s = orient(a, b, point);\n\n        if (s === 0) {\n          return 0;\n        } else {\n          inside ^= s < 0 | 0;\n        }\n      } else if (y === yi) {\n        var c = vs[(i + 1) % n];\n        var yk = c[1];\n\n        if (yk < yi) {\n          var s = orient(a, b, point);\n\n          if (s === 0) {\n            return 0;\n          } else {\n            inside ^= s < 0 | 0;\n          }\n        }\n      }\n    } else if (y === yi) {\n      var x0 = Math.min(a[0], b[0]);\n      var x1 = Math.max(a[0], b[0]);\n\n      if (i === 0) {\n        while (j > 0) {\n          var k = (j + n - 1) % n;\n          var p = vs[k];\n\n          if (p[1] !== y) {\n            break;\n          }\n\n          var px = p[0];\n          x0 = Math.min(x0, px);\n          x1 = Math.max(x1, px);\n          j = k;\n        }\n\n        if (j === 0) {\n          if (x0 <= x && x <= x1) {\n            return 0;\n          }\n\n          return 1;\n        }\n\n        lim = j + 1;\n      }\n\n      var y0 = vs[(j + n - 1) % n][1];\n\n      while (i + 1 < lim) {\n        var p = vs[i + 1];\n\n        if (p[1] !== y) {\n          break;\n        }\n\n        var px = p[0];\n        x0 = Math.min(x0, px);\n        x1 = Math.max(x1, px);\n        i += 1;\n      }\n\n      if (x0 <= x && x <= x1) {\n        return 0;\n      }\n\n      var y1 = vs[(i + 1) % n][1];\n\n      if (x < x0 && y0 < y !== y1 < y) {\n        inside ^= 1;\n      }\n    }\n  }\n\n  return 2 * inside - 1;\n}","map":{"version":3,"sources":["D:/Downloads/node_modules/robust-point-in-polygon/robust-pnp.js"],"names":["module","exports","robustPointInPolygon","orient","require","vs","point","x","y","n","length","inside","lim","i","j","a","b","yi","yj","s","c","yk","x0","Math","min","x1","max","k","p","px","y0","y1"],"mappings":"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","sourcesContent":["module.exports = robustPointInPolygon\n\nvar orient = require('robust-orientation')\n\nfunction robustPointInPolygon(vs, point) {\n  var x = point[0]\n  var y = point[1]\n  var n = vs.length\n  var inside = 1\n  var lim = n\n  for(var i = 0, j = n-1; i<lim; j=i++) {\n    var a = vs[i]\n    var b = vs[j]\n    var yi = a[1]\n    var yj = b[1]\n    if(yj < yi) {\n      if(yj < y && y < yi) {\n        var s = orient(a, b, point)\n        if(s === 0) {\n          return 0\n        } else {\n          inside ^= (0 < s)|0\n        }\n      } else if(y === yi) {\n        var c = vs[(i+1)%n]\n        var yk = c[1]\n        if(yi < yk) {\n          var s = orient(a, b, point)\n          if(s === 0) {\n            return 0\n          } else {\n            inside ^= (0 < s)|0\n          }\n        }\n      }\n    } else if(yi < yj) {\n      if(yi < y && y < yj) {\n        var s = orient(a, b, point)\n        if(s === 0) {\n          return 0\n        } else {\n          inside ^= (s < 0)|0\n        }\n      } else if(y === yi) {\n        var c = vs[(i+1)%n]\n        var yk = c[1]\n        if(yk < yi) {\n          var s = orient(a, b, point)\n          if(s === 0) {\n            return 0\n          } else {\n            inside ^= (s < 0)|0\n          }\n        }\n      }\n    } else if(y === yi) {\n      var x0 = Math.min(a[0], b[0])\n      var x1 = Math.max(a[0], b[0])\n      if(i === 0) {\n        while(j>0) {\n          var k = (j+n-1)%n\n          var p = vs[k]\n          if(p[1] !== y) {\n            break\n          }\n          var px = p[0]\n          x0 = Math.min(x0, px)\n          x1 = Math.max(x1, px)\n          j = k\n        }\n        if(j === 0) {\n          if(x0 <= x && x <= x1) {\n            return 0\n          }\n          return 1 \n        }\n        lim = j+1\n      }\n      var y0 = vs[(j+n-1)%n][1]\n      while(i+1<lim) {\n        var p = vs[i+1]\n        if(p[1] !== y) {\n          break\n        }\n        var px = p[0]\n        x0 = Math.min(x0, px)\n        x1 = Math.max(x1, px)\n        i += 1\n      }\n      if(x0 <= x && x <= x1) {\n        return 0\n      }\n      var y1 = vs[(i+1)%n][1]\n      if(x < x0 && (y0 < y !== y1 < y)) {\n        inside ^= 1\n      }\n    }\n  }\n  return 2 * inside - 1\n}"]},"metadata":{},"sourceType":"script"}