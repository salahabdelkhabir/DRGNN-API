{"ast":null,"code":"const cropText = (text, fontSize, maxWidth, fontWeight = 800) => {\n  let returnText = text;\n  const context = document.createElement('canvas').getContext('2d');\n  context.font = `${fontWeight} ${fontSize}px Arial`;\n  const width = context.measureText(text).width;\n\n  if (width > maxWidth) {\n    for (let i = 1; i < text.length; i += 1) {\n      const prevText = text.substr(0, i - 1).concat('...');\n      const currText = text.substr(0, i).concat('...');\n      const prevWidth = context.measureText(prevText).width;\n      const currWidth = context.measureText(currText).width;\n\n      if (currWidth > maxWidth && prevWidth < maxWidth) {\n        returnText = prevText;\n        break;\n      }\n    }\n  }\n\n  return returnText;\n};\n\nconst getTextWidth = (text, fontSize) => {\n  const context = document.createElement('canvas').getContext('2d');\n  context.font = `${fontSize}px Arial`;\n  const width = context.measureText(text).width;\n  return width;\n};\n\nexport { cropText, getTextWidth };","map":{"version":3,"sources":["D:/Downloads/Explorer_V2/src/helpers/text.ts"],"names":["cropText","text","fontSize","maxWidth","fontWeight","returnText","context","document","createElement","getContext","font","width","measureText","i","length","prevText","substr","concat","currText","prevWidth","currWidth","getTextWidth"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CACfC,IADe,EAEfC,QAFe,EAGfC,QAHe,EAIfC,UAAkB,GAAG,GAJN,KAKJ;AACX,MAAIC,UAAU,GAAGJ,IAAjB;AACA,QAAMK,OAAO,GAAGC,QAAQ,CACrBC,aADa,CACC,QADD,EAEbC,UAFa,CAEF,IAFE,CAAhB;AAGAH,EAAAA,OAAO,CAACI,IAAR,GAAgB,GAAEN,UAAW,IAAGF,QAAS,UAAzC;AACA,QAAMS,KAAK,GAAGL,OAAO,CAACM,WAAR,CAAoBX,IAApB,EAA0BU,KAAxC;;AACA,MAAIA,KAAK,GAAGR,QAAZ,EAAsB;AACpB,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACa,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,YAAME,QAAQ,GAAGd,IAAI,CAACe,MAAL,CAAY,CAAZ,EAAeH,CAAC,GAAG,CAAnB,EAAsBI,MAAtB,CAA6B,KAA7B,CAAjB;AACA,YAAMC,QAAQ,GAAGjB,IAAI,CAACe,MAAL,CAAY,CAAZ,EAAeH,CAAf,EAAkBI,MAAlB,CAAyB,KAAzB,CAAjB;AACA,YAAME,SAAS,GAAGb,OAAO,CAACM,WAAR,CAAoBG,QAApB,EAA8BJ,KAAhD;AACA,YAAMS,SAAS,GAAGd,OAAO,CAACM,WAAR,CAAoBM,QAApB,EAA8BP,KAAhD;;AACA,UAAIS,SAAS,GAAGjB,QAAZ,IAAwBgB,SAAS,GAAGhB,QAAxC,EAAkD;AAChDE,QAAAA,UAAU,GAAGU,QAAb;AACA;AACD;AACF;AACF;;AACD,SAAOV,UAAP;AACD,CAzBD;;AA2BA,MAAMgB,YAAY,GAAG,CAACpB,IAAD,EAAeC,QAAf,KAA4C;AAC/D,QAAMI,OAAO,GAAGC,QAAQ,CACrBC,aADa,CACC,QADD,EAEbC,UAFa,CAEF,IAFE,CAAhB;AAGAH,EAAAA,OAAO,CAACI,IAAR,GAAgB,GAAER,QAAS,UAA3B;AACA,QAAMS,KAAK,GAAGL,OAAO,CAACM,WAAR,CAAoBX,IAApB,EAA0BU,KAAxC;AACA,SAAOA,KAAP;AACD,CAPD;;AASA,SAASX,QAAT,EAAmBqB,YAAnB","sourcesContent":["const cropText = (\n  text: string,\n  fontSize: number,\n  maxWidth: number,\n  fontWeight: number = 800\n): string => {\n  let returnText = text;\n  const context = document\n    .createElement('canvas')\n    .getContext('2d') as CanvasRenderingContext2D;\n  context.font = `${fontWeight} ${fontSize}px Arial`;\n  const width = context.measureText(text).width;\n  if (width > maxWidth) {\n    for (let i = 1; i < text.length; i += 1) {\n      const prevText = text.substr(0, i - 1).concat('...');\n      const currText = text.substr(0, i).concat('...');\n      const prevWidth = context.measureText(prevText).width;\n      const currWidth = context.measureText(currText).width;\n      if (currWidth > maxWidth && prevWidth < maxWidth) {\n        returnText = prevText;\n        break;\n      }\n    }\n  }\n  return returnText;\n};\n\nconst getTextWidth = (text: string, fontSize: number): number => {\n  const context = document\n    .createElement('canvas')\n    .getContext('2d') as CanvasRenderingContext2D;\n  context.font = `${fontSize}px Arial`;\n  const width = context.measureText(text).width;\n  return width;\n};\n\nexport { cropText, getTextWidth };\n"]},"metadata":{},"sourceType":"module"}