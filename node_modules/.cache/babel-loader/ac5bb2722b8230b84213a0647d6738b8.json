{"ast":null,"code":"const COLORS = ['#4e79a7', // \"anatomy\",\n'#edc949', // \"biological_process\",\n'#e15759', // \"cellular_component\",\n'#f28e2c', // \"disease\",\n'#76b7b2', // \"drug\",\n'#59a14f', // \"effect/phenotype\",\n'#af7aa1', // \"exposure\",\n'#ff9da7', // \"gene/protein\",\n'#9c755f', // \"molecular_function\",\n'#bab0ab' // \"pathway\"\n];\nlet colorDict = {};\n\nconst setNodeColor = nodeTypes => {\n  colorDict = {};\n  nodeTypes.forEach((nodeType, idx) => {\n    if (idx > COLORS.length - 1) {\n      idx = idx % (COLORS.length - 1);\n    }\n\n    colorDict[nodeType] = COLORS[idx];\n  });\n};\n\nconst getNodeColor = nodeType => {\n  if (colorDict[nodeType] === undefined) {\n    colorDict[nodeType] = COLORS[Object.keys(colorDict).length];\n  }\n\n  return colorDict[nodeType];\n};\n\nconst HIGHLIGHT_COLOR = '#1890ff';\nconst SELECTED_COLOR = 'black';\nexport { setNodeColor, getNodeColor, HIGHLIGHT_COLOR, SELECTED_COLOR };","map":{"version":3,"sources":["D:/Downloads/Explorer_V2/src/helpers/color.ts"],"names":["COLORS","colorDict","setNodeColor","nodeTypes","forEach","nodeType","idx","length","getNodeColor","undefined","Object","keys","HIGHLIGHT_COLOR","SELECTED_COLOR"],"mappings":"AAAA,MAAMA,MAAM,GAAG,CACb,SADa,EACF;AACX,SAFa,EAEF;AACX,SAHa,EAGF;AACX,SAJa,EAIF;AACX,SALa,EAKF;AACX,SANa,EAMF;AACX,SAPa,EAOF;AACX,SARa,EAQF;AACX,SATa,EASF;AACX,SAVa,CAUF;AAVE,CAAf;AAYA,IAAIC,SAAqC,GAAG,EAA5C;;AAEA,MAAMC,YAAY,GAAIC,SAAD,IAAyB;AAC5CF,EAAAA,SAAS,GAAG,EAAZ;AACAE,EAAAA,SAAS,CAACC,OAAV,CAAkB,CAACC,QAAD,EAAWC,GAAX,KAAmB;AACnC,QAAIA,GAAG,GAAGN,MAAM,CAACO,MAAP,GAAgB,CAA1B,EAA6B;AAC3BD,MAAAA,GAAG,GAAGA,GAAG,IAAIN,MAAM,CAACO,MAAP,GAAgB,CAApB,CAAT;AACD;;AACDN,IAAAA,SAAS,CAACI,QAAD,CAAT,GAAsBL,MAAM,CAACM,GAAD,CAA5B;AACD,GALD;AAMD,CARD;;AAUA,MAAME,YAAY,GAAIH,QAAD,IAAsB;AACzC,MAAIJ,SAAS,CAACI,QAAD,CAAT,KAAwBI,SAA5B,EAAuC;AACrCR,IAAAA,SAAS,CAACI,QAAD,CAAT,GAAsBL,MAAM,CAACU,MAAM,CAACC,IAAP,CAAYV,SAAZ,EAAuBM,MAAxB,CAA5B;AACD;;AAED,SAAON,SAAS,CAACI,QAAD,CAAhB;AACD,CAND;;AAQA,MAAMO,eAAe,GAAG,SAAxB;AACA,MAAMC,cAAc,GAAG,OAAvB;AAEA,SAASX,YAAT,EAAuBM,YAAvB,EAAqCI,eAArC,EAAsDC,cAAtD","sourcesContent":["const COLORS = [\n  '#4e79a7', // \"anatomy\",\n  '#edc949', // \"biological_process\",\n  '#e15759', // \"cellular_component\",\n  '#f28e2c', // \"disease\",\n  '#76b7b2', // \"drug\",\n  '#59a14f', // \"effect/phenotype\",\n  '#af7aa1', // \"exposure\",\n  '#ff9da7', // \"gene/protein\",\n  '#9c755f', // \"molecular_function\",\n  '#bab0ab', // \"pathway\"\n];\nlet colorDict: { [node: string]: string } = {};\n\nconst setNodeColor = (nodeTypes: string[]) => {\n  colorDict = {};\n  nodeTypes.forEach((nodeType, idx) => {\n    if (idx > COLORS.length - 1) {\n      idx = idx % (COLORS.length - 1);\n    }\n    colorDict[nodeType] = COLORS[idx];\n  });\n};\n\nconst getNodeColor = (nodeType: string) => {\n  if (colorDict[nodeType] === undefined) {\n    colorDict[nodeType] = COLORS[Object.keys(colorDict).length];\n  }\n\n  return colorDict[nodeType];\n};\n\nconst HIGHLIGHT_COLOR = '#1890ff';\nconst SELECTED_COLOR = 'black';\n\nexport { setNodeColor, getNodeColor, HIGHLIGHT_COLOR, SELECTED_COLOR };\n"]},"metadata":{},"sourceType":"module"}